// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `plt_file_service.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.juzix.plt.slice.file;

/**
 * 文件服务
 **/
public interface PltFileServicePrx extends Ice.ObjectPrx
{
    /**
     * 小文件上传
     * @param userId 用户id
     * @param token 登陆令牌
     * @param totalBytes 文件总字节数
     * @param content 文件内容
     * @param fileType 文件类型
     * @return fileId 文件id
     **/
    public String smallFileUpload(String userId, String token, int totalBytes, byte[] content, String fileType)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 小文件上传
     * @param userId 用户id
     * @param token 登陆令牌
     * @param totalBytes 文件总字节数
     * @param content 文件内容
     * @param fileType 文件类型
     * @param __ctx The Context map to send with the invocation.
     * @return fileId 文件id
     **/
    public String smallFileUpload(String userId, String token, int totalBytes, byte[] content, String fileType, java.util.Map<String, String> __ctx)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 小文件上传
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @param fileType 文件类型
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_smallFileUpload(String userId, String token, int totalBytes, byte[] content, String fileType);

    /**
     * 小文件上传
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @param fileType 文件类型
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_smallFileUpload(String userId, String token, int totalBytes, byte[] content, String fileType, java.util.Map<String, String> __ctx);

    /**
     * 小文件上传
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @param fileType 文件类型
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_smallFileUpload(String userId, String token, int totalBytes, byte[] content, String fileType, Ice.Callback __cb);

    /**
     * 小文件上传
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @param fileType 文件类型
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_smallFileUpload(String userId, String token, int totalBytes, byte[] content, String fileType, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 小文件上传
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @param fileType 文件类型
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_smallFileUpload(String userId, String token, int totalBytes, byte[] content, String fileType, Callback_PltFileService_smallFileUpload __cb);

    /**
     * 小文件上传
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @param fileType 文件类型
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_smallFileUpload(String userId, String token, int totalBytes, byte[] content, String fileType, java.util.Map<String, String> __ctx, Callback_PltFileService_smallFileUpload __cb);

    /**
     * 小文件上传
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @param fileType 文件类型
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_smallFileUpload(String userId, 
                                                 String token, 
                                                 int totalBytes, 
                                                 byte[] content, 
                                                 String fileType, 
                                                 IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 小文件上传
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @param fileType 文件类型
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_smallFileUpload(String userId, 
                                                 String token, 
                                                 int totalBytes, 
                                                 byte[] content, 
                                                 String fileType, 
                                                 IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 小文件上传
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @param fileType 文件类型
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_smallFileUpload(String userId, 
                                                 String token, 
                                                 int totalBytes, 
                                                 byte[] content, 
                                                 String fileType, 
                                                 java.util.Map<String, String> __ctx, 
                                                 IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 小文件上传
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @param fileType 文件类型
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_smallFileUpload(String userId, 
                                                 String token, 
                                                 int totalBytes, 
                                                 byte[] content, 
                                                 String fileType, 
                                                 java.util.Map<String, String> __ctx, 
                                                 IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 小文件上传
     * @param __result The asynchronous result object.
     * @return fileId 文件id
     **/
    public String end_smallFileUpload(Ice.AsyncResult __result)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 大文件上传创建上传任务
     * @param userId 用户id
     * @param token 登陆令牌
     * @param totalBytes 文件总字节数
     * @param fileType 文件类型
     * @return fileId 文件id
     **/
    public String createUpTask(String userId, String token, int totalBytes, String fileType)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 大文件上传创建上传任务
     * @param userId 用户id
     * @param token 登陆令牌
     * @param totalBytes 文件总字节数
     * @param fileType 文件类型
     * @param __ctx The Context map to send with the invocation.
     * @return fileId 文件id
     **/
    public String createUpTask(String userId, String token, int totalBytes, String fileType, java.util.Map<String, String> __ctx)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 大文件上传创建上传任务
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createUpTask(String userId, String token, int totalBytes, String fileType);

    /**
     * 大文件上传创建上传任务
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createUpTask(String userId, String token, int totalBytes, String fileType, java.util.Map<String, String> __ctx);

    /**
     * 大文件上传创建上传任务
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createUpTask(String userId, String token, int totalBytes, String fileType, Ice.Callback __cb);

    /**
     * 大文件上传创建上传任务
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createUpTask(String userId, String token, int totalBytes, String fileType, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 大文件上传创建上传任务
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createUpTask(String userId, String token, int totalBytes, String fileType, Callback_PltFileService_createUpTask __cb);

    /**
     * 大文件上传创建上传任务
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createUpTask(String userId, String token, int totalBytes, String fileType, java.util.Map<String, String> __ctx, Callback_PltFileService_createUpTask __cb);

    /**
     * 大文件上传创建上传任务
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createUpTask(String userId, 
                                              String token, 
                                              int totalBytes, 
                                              String fileType, 
                                              IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 大文件上传创建上传任务
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createUpTask(String userId, 
                                              String token, 
                                              int totalBytes, 
                                              String fileType, 
                                              IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 大文件上传创建上传任务
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createUpTask(String userId, 
                                              String token, 
                                              int totalBytes, 
                                              String fileType, 
                                              java.util.Map<String, String> __ctx, 
                                              IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 大文件上传创建上传任务
     * @param userId 用户id
     * @param totalBytes 文件总字节数
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createUpTask(String userId, 
                                              String token, 
                                              int totalBytes, 
                                              String fileType, 
                                              java.util.Map<String, String> __ctx, 
                                              IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                              IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                              IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 大文件上传创建上传任务
     * @param __result The asynchronous result object.
     * @return fileId 文件id
     **/
    public String end_createUpTask(Ice.AsyncResult __result)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 大文件上传
     * @param fileId 文件id
     * @param totalBytes 文件总字节数
     * @param startBytes 开始字节数
     * @param endBytes 结束字节数
     * @param content 文件内容
     * @return fileId 文件id
     **/
    public String bigFileUpload(String fileId, int totalBytes, int startBytes, int endBytes, byte[] content)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 大文件上传
     * @param fileId 文件id
     * @param totalBytes 文件总字节数
     * @param startBytes 开始字节数
     * @param endBytes 结束字节数
     * @param content 文件内容
     * @param __ctx The Context map to send with the invocation.
     * @return fileId 文件id
     **/
    public String bigFileUpload(String fileId, int totalBytes, int startBytes, int endBytes, byte[] content, java.util.Map<String, String> __ctx)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 大文件上传
     * @param fileId 文件id
     * @param startBytes 开始字节数
     * @param content 文件内容
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_bigFileUpload(String fileId, int totalBytes, int startBytes, int endBytes, byte[] content);

    /**
     * 大文件上传
     * @param fileId 文件id
     * @param startBytes 开始字节数
     * @param content 文件内容
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_bigFileUpload(String fileId, int totalBytes, int startBytes, int endBytes, byte[] content, java.util.Map<String, String> __ctx);

    /**
     * 大文件上传
     * @param fileId 文件id
     * @param startBytes 开始字节数
     * @param content 文件内容
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_bigFileUpload(String fileId, int totalBytes, int startBytes, int endBytes, byte[] content, Ice.Callback __cb);

    /**
     * 大文件上传
     * @param fileId 文件id
     * @param startBytes 开始字节数
     * @param content 文件内容
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_bigFileUpload(String fileId, int totalBytes, int startBytes, int endBytes, byte[] content, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 大文件上传
     * @param fileId 文件id
     * @param startBytes 开始字节数
     * @param content 文件内容
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_bigFileUpload(String fileId, int totalBytes, int startBytes, int endBytes, byte[] content, Callback_PltFileService_bigFileUpload __cb);

    /**
     * 大文件上传
     * @param fileId 文件id
     * @param startBytes 开始字节数
     * @param content 文件内容
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_bigFileUpload(String fileId, int totalBytes, int startBytes, int endBytes, byte[] content, java.util.Map<String, String> __ctx, Callback_PltFileService_bigFileUpload __cb);

    /**
     * 大文件上传
     * @param fileId 文件id
     * @param startBytes 开始字节数
     * @param content 文件内容
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_bigFileUpload(String fileId, 
                                               int totalBytes, 
                                               int startBytes, 
                                               int endBytes, 
                                               byte[] content, 
                                               IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 大文件上传
     * @param fileId 文件id
     * @param startBytes 开始字节数
     * @param content 文件内容
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_bigFileUpload(String fileId, 
                                               int totalBytes, 
                                               int startBytes, 
                                               int endBytes, 
                                               byte[] content, 
                                               IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 大文件上传
     * @param fileId 文件id
     * @param startBytes 开始字节数
     * @param content 文件内容
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_bigFileUpload(String fileId, 
                                               int totalBytes, 
                                               int startBytes, 
                                               int endBytes, 
                                               byte[] content, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 大文件上传
     * @param fileId 文件id
     * @param startBytes 开始字节数
     * @param content 文件内容
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_bigFileUpload(String fileId, 
                                               int totalBytes, 
                                               int startBytes, 
                                               int endBytes, 
                                               byte[] content, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 大文件上传
     * @param __result The asynchronous result object.
     * @return fileId 文件id
     **/
    public String end_bigFileUpload(Ice.AsyncResult __result)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 大文件上传结束上传任务
     * @param fileId 文件id
     * @param action 结束标志  A:完成  B:取消
     * @return fileId 文件id
     **/
    public String endUpTask(String fileId, PltEndType action)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 大文件上传结束上传任务
     * @param fileId 文件id
     * @param action 结束标志  A:完成  B:取消
     * @param __ctx The Context map to send with the invocation.
     * @return fileId 文件id
     **/
    public String endUpTask(String fileId, PltEndType action, java.util.Map<String, String> __ctx)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 大文件上传结束上传任务
     * @param fileId 文件id
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endUpTask(String fileId, PltEndType action);

    /**
     * 大文件上传结束上传任务
     * @param fileId 文件id
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endUpTask(String fileId, PltEndType action, java.util.Map<String, String> __ctx);

    /**
     * 大文件上传结束上传任务
     * @param fileId 文件id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endUpTask(String fileId, PltEndType action, Ice.Callback __cb);

    /**
     * 大文件上传结束上传任务
     * @param fileId 文件id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endUpTask(String fileId, PltEndType action, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 大文件上传结束上传任务
     * @param fileId 文件id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endUpTask(String fileId, PltEndType action, Callback_PltFileService_endUpTask __cb);

    /**
     * 大文件上传结束上传任务
     * @param fileId 文件id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endUpTask(String fileId, PltEndType action, java.util.Map<String, String> __ctx, Callback_PltFileService_endUpTask __cb);

    /**
     * 大文件上传结束上传任务
     * @param fileId 文件id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endUpTask(String fileId, 
                                           PltEndType action, 
                                           IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 大文件上传结束上传任务
     * @param fileId 文件id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endUpTask(String fileId, 
                                           PltEndType action, 
                                           IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 大文件上传结束上传任务
     * @param fileId 文件id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endUpTask(String fileId, 
                                           PltEndType action, 
                                           java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 大文件上传结束上传任务
     * @param fileId 文件id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_endUpTask(String fileId, 
                                           PltEndType action, 
                                           java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 大文件上传结束上传任务
     * @param __result The asynchronous result object.
     * @return fileId 文件id
     **/
    public String end_endUpTask(Ice.AsyncResult __result)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 创建下载任务
     * @param userId 用户id
     * @param token 登陆令牌
     * @param fileId 文件id
     * @return PltDownTaskResp
     **/
    public PltDownTaskResp createDownTask(String userId, String token, String fileId)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 创建下载任务
     * @param userId 用户id
     * @param token 登陆令牌
     * @param fileId 文件id
     * @param __ctx The Context map to send with the invocation.
     * @return PltDownTaskResp
     **/
    public PltDownTaskResp createDownTask(String userId, String token, String fileId, java.util.Map<String, String> __ctx)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 创建下载任务
     * @param userId 用户id
     * @param fileId 文件id
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createDownTask(String userId, String token, String fileId);

    /**
     * 创建下载任务
     * @param userId 用户id
     * @param fileId 文件id
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createDownTask(String userId, String token, String fileId, java.util.Map<String, String> __ctx);

    /**
     * 创建下载任务
     * @param userId 用户id
     * @param fileId 文件id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createDownTask(String userId, String token, String fileId, Ice.Callback __cb);

    /**
     * 创建下载任务
     * @param userId 用户id
     * @param fileId 文件id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createDownTask(String userId, String token, String fileId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 创建下载任务
     * @param userId 用户id
     * @param fileId 文件id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createDownTask(String userId, String token, String fileId, Callback_PltFileService_createDownTask __cb);

    /**
     * 创建下载任务
     * @param userId 用户id
     * @param fileId 文件id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createDownTask(String userId, String token, String fileId, java.util.Map<String, String> __ctx, Callback_PltFileService_createDownTask __cb);

    /**
     * 创建下载任务
     * @param userId 用户id
     * @param fileId 文件id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createDownTask(String userId, 
                                                String token, 
                                                String fileId, 
                                                IceInternal.Functional_GenericCallback1<PltDownTaskResp> __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 创建下载任务
     * @param userId 用户id
     * @param fileId 文件id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createDownTask(String userId, 
                                                String token, 
                                                String fileId, 
                                                IceInternal.Functional_GenericCallback1<PltDownTaskResp> __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 创建下载任务
     * @param userId 用户id
     * @param fileId 文件id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createDownTask(String userId, 
                                                String token, 
                                                String fileId, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_GenericCallback1<PltDownTaskResp> __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 创建下载任务
     * @param userId 用户id
     * @param fileId 文件id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_createDownTask(String userId, 
                                                String token, 
                                                String fileId, 
                                                java.util.Map<String, String> __ctx, 
                                                IceInternal.Functional_GenericCallback1<PltDownTaskResp> __responseCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 创建下载任务
     * @param __result The asynchronous result object.
     * @return PltDownTaskResp
     **/
    public PltDownTaskResp end_createDownTask(Ice.AsyncResult __result)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 文件下载
     * @param userId 用户id
     * @param token 登陆令牌
     * @param fileId 文件id
     * @return PltFileDownResp
     **/
    public PltFileDownResp fileDown(PltFileDownReq req)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 文件下载
     * @param userId 用户id
     * @param token 登陆令牌
     * @param fileId 文件id
     * @param __ctx The Context map to send with the invocation.
     * @return PltFileDownResp
     **/
    public PltFileDownResp fileDown(PltFileDownReq req, java.util.Map<String, String> __ctx)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 文件下载
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_fileDown(PltFileDownReq req);

    /**
     * 文件下载
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_fileDown(PltFileDownReq req, java.util.Map<String, String> __ctx);

    /**
     * 文件下载
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_fileDown(PltFileDownReq req, Ice.Callback __cb);

    /**
     * 文件下载
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_fileDown(PltFileDownReq req, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 文件下载
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_fileDown(PltFileDownReq req, Callback_PltFileService_fileDown __cb);

    /**
     * 文件下载
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_fileDown(PltFileDownReq req, java.util.Map<String, String> __ctx, Callback_PltFileService_fileDown __cb);

    /**
     * 文件下载
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_fileDown(PltFileDownReq req, 
                                          IceInternal.Functional_GenericCallback1<PltFileDownResp> __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 文件下载
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_fileDown(PltFileDownReq req, 
                                          IceInternal.Functional_GenericCallback1<PltFileDownResp> __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 文件下载
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_fileDown(PltFileDownReq req, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_GenericCallback1<PltFileDownResp> __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 文件下载
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_fileDown(PltFileDownReq req, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_GenericCallback1<PltFileDownResp> __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 文件下载
     * @param __result The asynchronous result object.
     * @return PltFileDownResp
     **/
    public PltFileDownResp end_fileDown(Ice.AsyncResult __result)
        throws com.juzix.plt.slice.common.PltException;
}
