// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `plt_file_service.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.juzix.plt.slice.file;

/**
 * 文件下载响应参数
 **/
public class PltFileDownResp implements java.lang.Cloneable, java.io.Serializable
{
    /**
     * 文件id
     **/
    public String fileId;

    /**
     * 文件id
     **/
    public String
    getFileId()
    {
        return fileId;
    }

    /**
     * 文件id
     **/
    public void
    setFileId(String _fileId)
    {
        fileId = _fileId;
    }

    /**
     * 总字节大小
     **/
    public int totalBytes;

    /**
     * 总字节大小
     **/
    public int
    getTotalBytes()
    {
        return totalBytes;
    }

    /**
     * 总字节大小
     **/
    public void
    setTotalBytes(int _totalBytes)
    {
        totalBytes = _totalBytes;
    }

    /**
     * 开始字节数
     **/
    public int startBytes;

    /**
     * 开始字节数
     **/
    public int
    getStartBytes()
    {
        return startBytes;
    }

    /**
     * 开始字节数
     **/
    public void
    setStartBytes(int _startBytes)
    {
        startBytes = _startBytes;
    }

    /**
     * 结束字节数
     **/
    public int endBytes;

    /**
     * 结束字节数
     **/
    public int
    getEndBytes()
    {
        return endBytes;
    }

    /**
     * 结束字节数
     **/
    public void
    setEndBytes(int _endBytes)
    {
        endBytes = _endBytes;
    }

    /**
     * 内容
     **/
    public byte[] content;

    /**
     * 内容
     **/
    public byte[]
    getContent()
    {
        return content;
    }

    /**
     * 内容
     **/
    public void
    setContent(byte[] _content)
    {
        content = _content;
    }

    public byte
    getContent(int _index)
    {
        return content[_index];
    }

    public void
    setContent(int _index, byte _val)
    {
        content[_index] = _val;
    }

    public PltFileDownResp()
    {
        fileId = "";
    }

    public PltFileDownResp(String fileId, int totalBytes, int startBytes, int endBytes, byte[] content)
    {
        this.fileId = fileId;
        this.totalBytes = totalBytes;
        this.startBytes = startBytes;
        this.endBytes = endBytes;
        this.content = content;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        PltFileDownResp _r = null;
        if(rhs instanceof PltFileDownResp)
        {
            _r = (PltFileDownResp)rhs;
        }

        if(_r != null)
        {
            if(fileId != _r.fileId)
            {
                if(fileId == null || _r.fileId == null || !fileId.equals(_r.fileId))
                {
                    return false;
                }
            }
            if(totalBytes != _r.totalBytes)
            {
                return false;
            }
            if(startBytes != _r.startBytes)
            {
                return false;
            }
            if(endBytes != _r.endBytes)
            {
                return false;
            }
            if(!java.util.Arrays.equals(content, _r.content))
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::file::PltFileDownResp");
        __h = IceInternal.HashUtil.hashAdd(__h, fileId);
        __h = IceInternal.HashUtil.hashAdd(__h, totalBytes);
        __h = IceInternal.HashUtil.hashAdd(__h, startBytes);
        __h = IceInternal.HashUtil.hashAdd(__h, endBytes);
        __h = IceInternal.HashUtil.hashAdd(__h, content);
        return __h;
    }

    public PltFileDownResp
    clone()
    {
        PltFileDownResp c = null;
        try
        {
            c = (PltFileDownResp)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(fileId);
        __os.writeInt(totalBytes);
        __os.writeInt(startBytes);
        __os.writeInt(endBytes);
        Ice.ByteSeqHelper.write(__os, content);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        fileId = __is.readString();
        totalBytes = __is.readInt();
        startBytes = __is.readInt();
        endBytes = __is.readInt();
        content = Ice.ByteSeqHelper.read(__is);
    }

    static public void
    __write(IceInternal.BasicStream __os, PltFileDownResp __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public PltFileDownResp
    __read(IceInternal.BasicStream __is, PltFileDownResp __v)
    {
        if(__v == null)
        {
             __v = new PltFileDownResp();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final PltFileDownResp __nullMarshalValue = new PltFileDownResp();

    public static final long serialVersionUID = 1489741588L;
}
