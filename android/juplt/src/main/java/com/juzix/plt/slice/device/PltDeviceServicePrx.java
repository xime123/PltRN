// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `plt_device_service.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.juzix.plt.slice.device;

/**
 * 设备服务
 **/
public interface PltDeviceServicePrx extends Ice.ObjectPrx
{
    /**
     * 设备注册
     * @param osType 设备类型。  ISO|ANDROID
     * @param deviceIdentifier 设备的唯一标示。 当android时：mac ，当ios时：uuid
     * @param apns token
     * @return deviceId 设备id
     **/
    public String register(String osType, String deviceIdentifier, String apns)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 设备注册
     * @param osType 设备类型。  ISO|ANDROID
     * @param deviceIdentifier 设备的唯一标示。 当android时：mac ，当ios时：uuid
     * @param apns token
     * @param __ctx The Context map to send with the invocation.
     * @return deviceId 设备id
     **/
    public String register(String osType, String deviceIdentifier, String apns, java.util.Map<String, String> __ctx)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 设备注册
     * @param osType 设备类型。  ISO|ANDROID
     * @param apns token
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_register(String osType, String deviceIdentifier, String apns);

    /**
     * 设备注册
     * @param osType 设备类型。  ISO|ANDROID
     * @param apns token
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_register(String osType, String deviceIdentifier, String apns, java.util.Map<String, String> __ctx);

    /**
     * 设备注册
     * @param osType 设备类型。  ISO|ANDROID
     * @param apns token
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_register(String osType, String deviceIdentifier, String apns, Ice.Callback __cb);

    /**
     * 设备注册
     * @param osType 设备类型。  ISO|ANDROID
     * @param apns token
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_register(String osType, String deviceIdentifier, String apns, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 设备注册
     * @param osType 设备类型。  ISO|ANDROID
     * @param apns token
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_register(String osType, String deviceIdentifier, String apns, Callback_PltDeviceService_register __cb);

    /**
     * 设备注册
     * @param osType 设备类型。  ISO|ANDROID
     * @param apns token
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_register(String osType, String deviceIdentifier, String apns, java.util.Map<String, String> __ctx, Callback_PltDeviceService_register __cb);

    /**
     * 设备注册
     * @param osType 设备类型。  ISO|ANDROID
     * @param apns token
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_register(String osType, 
                                          String deviceIdentifier, 
                                          String apns, 
                                          IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 设备注册
     * @param osType 设备类型。  ISO|ANDROID
     * @param apns token
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_register(String osType, 
                                          String deviceIdentifier, 
                                          String apns, 
                                          IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 设备注册
     * @param osType 设备类型。  ISO|ANDROID
     * @param apns token
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_register(String osType, 
                                          String deviceIdentifier, 
                                          String apns, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 设备注册
     * @param osType 设备类型。  ISO|ANDROID
     * @param apns token
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_register(String osType, 
                                          String deviceIdentifier, 
                                          String apns, 
                                          java.util.Map<String, String> __ctx, 
                                          IceInternal.Functional_GenericCallback1<String> __responseCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                          IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                          IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 设备注册
     * @param __result The asynchronous result object.
     * @return deviceId 设备id
     **/
    public String end_register(Ice.AsyncResult __result)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 更新设备会话信息，当属性存在时采用增量更新(客户端)
     * @param deviceId 设备id
     * @param deviceInfo 设备信息
     **/
    public void updateSelective(String deviceId, PltDeviceInfo deviceInfo)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 更新设备会话信息，当属性存在时采用增量更新(客户端)
     * @param deviceId 设备id
     * @param deviceInfo 设备信息
     * @param __ctx The Context map to send with the invocation.
     **/
    public void updateSelective(String deviceId, PltDeviceInfo deviceInfo, java.util.Map<String, String> __ctx)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 更新设备会话信息，当属性存在时采用增量更新(客户端)
     * @param deviceId 设备id
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateSelective(String deviceId, PltDeviceInfo deviceInfo);

    /**
     * 更新设备会话信息，当属性存在时采用增量更新(客户端)
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateSelective(String deviceId, PltDeviceInfo deviceInfo, java.util.Map<String, String> __ctx);

    /**
     * 更新设备会话信息，当属性存在时采用增量更新(客户端)
     * @param deviceId 设备id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateSelective(String deviceId, PltDeviceInfo deviceInfo, Ice.Callback __cb);

    /**
     * 更新设备会话信息，当属性存在时采用增量更新(客户端)
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateSelective(String deviceId, PltDeviceInfo deviceInfo, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 更新设备会话信息，当属性存在时采用增量更新(客户端)
     * @param deviceId 设备id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateSelective(String deviceId, PltDeviceInfo deviceInfo, Callback_PltDeviceService_updateSelective __cb);

    /**
     * 更新设备会话信息，当属性存在时采用增量更新(客户端)
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateSelective(String deviceId, PltDeviceInfo deviceInfo, java.util.Map<String, String> __ctx, Callback_PltDeviceService_updateSelective __cb);

    /**
     * 更新设备会话信息，当属性存在时采用增量更新(客户端)
     * @param deviceId 设备id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateSelective(String deviceId, 
                                                 PltDeviceInfo deviceInfo, 
                                                 IceInternal.Functional_VoidCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 更新设备会话信息，当属性存在时采用增量更新(客户端)
     * @param deviceId 设备id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateSelective(String deviceId, 
                                                 PltDeviceInfo deviceInfo, 
                                                 IceInternal.Functional_VoidCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 更新设备会话信息，当属性存在时采用增量更新(客户端)
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateSelective(String deviceId, 
                                                 PltDeviceInfo deviceInfo, 
                                                 java.util.Map<String, String> __ctx, 
                                                 IceInternal.Functional_VoidCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 更新设备会话信息，当属性存在时采用增量更新(客户端)
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_updateSelective(String deviceId, 
                                                 PltDeviceInfo deviceInfo, 
                                                 java.util.Map<String, String> __ctx, 
                                                 IceInternal.Functional_VoidCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 更新设备会话信息，当属性存在时采用增量更新(客户端)
     * @param __result The asynchronous result object.
     **/
    public void end_updateSelective(Ice.AsyncResult __result)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 增量删除设备会话信息
     * @param deviceId 设备id
     * @param fields 需要删除会话的fields
     **/
    public void deleteSelective(String deviceId, String[] fields)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 增量删除设备会话信息
     * @param deviceId 设备id
     * @param fields 需要删除会话的fields
     * @param __ctx The Context map to send with the invocation.
     **/
    public void deleteSelective(String deviceId, String[] fields, java.util.Map<String, String> __ctx)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 增量删除设备会话信息
     * @param deviceId 设备id
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteSelective(String deviceId, String[] fields);

    /**
     * 增量删除设备会话信息
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteSelective(String deviceId, String[] fields, java.util.Map<String, String> __ctx);

    /**
     * 增量删除设备会话信息
     * @param deviceId 设备id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteSelective(String deviceId, String[] fields, Ice.Callback __cb);

    /**
     * 增量删除设备会话信息
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteSelective(String deviceId, String[] fields, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 增量删除设备会话信息
     * @param deviceId 设备id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteSelective(String deviceId, String[] fields, Callback_PltDeviceService_deleteSelective __cb);

    /**
     * 增量删除设备会话信息
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteSelective(String deviceId, String[] fields, java.util.Map<String, String> __ctx, Callback_PltDeviceService_deleteSelective __cb);

    /**
     * 增量删除设备会话信息
     * @param deviceId 设备id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteSelective(String deviceId, 
                                                 String[] fields, 
                                                 IceInternal.Functional_VoidCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 增量删除设备会话信息
     * @param deviceId 设备id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteSelective(String deviceId, 
                                                 String[] fields, 
                                                 IceInternal.Functional_VoidCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 增量删除设备会话信息
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteSelective(String deviceId, 
                                                 String[] fields, 
                                                 java.util.Map<String, String> __ctx, 
                                                 IceInternal.Functional_VoidCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 增量删除设备会话信息
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_deleteSelective(String deviceId, 
                                                 String[] fields, 
                                                 java.util.Map<String, String> __ctx, 
                                                 IceInternal.Functional_VoidCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 增量删除设备会话信息
     * @param __result The asynchronous result object.
     **/
    public void end_deleteSelective(Ice.AsyncResult __result)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 查询设备会话信息
     * @param deviceId 设备id
     * @return PltDeviceInfo
     **/
    public PltDeviceInfo queryDeviceInfo(String deviceId)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 查询设备会话信息
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @return PltDeviceInfo
     **/
    public PltDeviceInfo queryDeviceInfo(String deviceId, java.util.Map<String, String> __ctx)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 查询设备会话信息
     * @param deviceId 设备id
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfo(String deviceId);

    /**
     * 查询设备会话信息
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfo(String deviceId, java.util.Map<String, String> __ctx);

    /**
     * 查询设备会话信息
     * @param deviceId 设备id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfo(String deviceId, Ice.Callback __cb);

    /**
     * 查询设备会话信息
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfo(String deviceId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 查询设备会话信息
     * @param deviceId 设备id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfo(String deviceId, Callback_PltDeviceService_queryDeviceInfo __cb);

    /**
     * 查询设备会话信息
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfo(String deviceId, java.util.Map<String, String> __ctx, Callback_PltDeviceService_queryDeviceInfo __cb);

    /**
     * 查询设备会话信息
     * @param deviceId 设备id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfo(String deviceId, 
                                                 IceInternal.Functional_GenericCallback1<PltDeviceInfo> __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 查询设备会话信息
     * @param deviceId 设备id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfo(String deviceId, 
                                                 IceInternal.Functional_GenericCallback1<PltDeviceInfo> __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 查询设备会话信息
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfo(String deviceId, 
                                                 java.util.Map<String, String> __ctx, 
                                                 IceInternal.Functional_GenericCallback1<PltDeviceInfo> __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 查询设备会话信息
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfo(String deviceId, 
                                                 java.util.Map<String, String> __ctx, 
                                                 IceInternal.Functional_GenericCallback1<PltDeviceInfo> __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 查询设备会话信息
     * @param __result The asynchronous result object.
     * @return PltDeviceInfo
     **/
    public PltDeviceInfo end_queryDeviceInfo(Ice.AsyncResult __result)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 批量查询设备会话信息
     * @param deviceIds 设备id列表
     * @return deviceInfoList 设备信息列表
     **/
    public PltDeviceInfo[] queryDeviceInfoBatch(String[] deviceIds)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 批量查询设备会话信息
     * @param deviceIds 设备id列表
     * @param __ctx The Context map to send with the invocation.
     * @return deviceInfoList 设备信息列表
     **/
    public PltDeviceInfo[] queryDeviceInfoBatch(String[] deviceIds, java.util.Map<String, String> __ctx)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 批量查询设备会话信息
     * @param deviceIds 设备id列表
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfoBatch(String[] deviceIds);

    /**
     * 批量查询设备会话信息
     * @param deviceIds 设备id列表
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfoBatch(String[] deviceIds, java.util.Map<String, String> __ctx);

    /**
     * 批量查询设备会话信息
     * @param deviceIds 设备id列表
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfoBatch(String[] deviceIds, Ice.Callback __cb);

    /**
     * 批量查询设备会话信息
     * @param deviceIds 设备id列表
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfoBatch(String[] deviceIds, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 批量查询设备会话信息
     * @param deviceIds 设备id列表
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfoBatch(String[] deviceIds, Callback_PltDeviceService_queryDeviceInfoBatch __cb);

    /**
     * 批量查询设备会话信息
     * @param deviceIds 设备id列表
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfoBatch(String[] deviceIds, java.util.Map<String, String> __ctx, Callback_PltDeviceService_queryDeviceInfoBatch __cb);

    /**
     * 批量查询设备会话信息
     * @param deviceIds 设备id列表
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfoBatch(String[] deviceIds, 
                                                      IceInternal.Functional_GenericCallback1<PltDeviceInfo[]> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 批量查询设备会话信息
     * @param deviceIds 设备id列表
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfoBatch(String[] deviceIds, 
                                                      IceInternal.Functional_GenericCallback1<PltDeviceInfo[]> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                      IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 批量查询设备会话信息
     * @param deviceIds 设备id列表
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfoBatch(String[] deviceIds, 
                                                      java.util.Map<String, String> __ctx, 
                                                      IceInternal.Functional_GenericCallback1<PltDeviceInfo[]> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 批量查询设备会话信息
     * @param deviceIds 设备id列表
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryDeviceInfoBatch(String[] deviceIds, 
                                                      java.util.Map<String, String> __ctx, 
                                                      IceInternal.Functional_GenericCallback1<PltDeviceInfo[]> __responseCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                      IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 批量查询设备会话信息
     * @param __result The asynchronous result object.
     * @return deviceInfoList 设备信息列表
     **/
    public PltDeviceInfo[] end_queryDeviceInfoBatch(Ice.AsyncResult __result)
        throws com.juzix.plt.slice.common.PltException;
}
