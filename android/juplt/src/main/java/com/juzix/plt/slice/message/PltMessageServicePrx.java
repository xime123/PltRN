// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `plt_message_service.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.juzix.plt.slice.message;

/**
 * 消息服务
 **/
public interface PltMessageServicePrx extends Ice.ObjectPrx
{
    /**
     * 推送消息
     **/
    public void push(String msgType, String[] receivers, String mode, String label, String msgContent, String cd, String sender, String chainType)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 推送消息
     * @param __ctx The Context map to send with the invocation.
     **/
    public void push(String msgType, String[] receivers, String mode, String label, String msgContent, String cd, String sender, String chainType, java.util.Map<String, String> __ctx)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 推送消息
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_push(String msgType, String[] receivers, String mode, String label, String msgContent, String cd, String sender, String chainType);

    /**
     * 推送消息
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_push(String msgType, String[] receivers, String mode, String label, String msgContent, String cd, String sender, String chainType, java.util.Map<String, String> __ctx);

    /**
     * 推送消息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_push(String msgType, String[] receivers, String mode, String label, String msgContent, String cd, String sender, String chainType, Ice.Callback __cb);

    /**
     * 推送消息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_push(String msgType, String[] receivers, String mode, String label, String msgContent, String cd, String sender, String chainType, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 推送消息
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_push(String msgType, String[] receivers, String mode, String label, String msgContent, String cd, String sender, String chainType, Callback_PltMessageService_push __cb);

    /**
     * 推送消息
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_push(String msgType, String[] receivers, String mode, String label, String msgContent, String cd, String sender, String chainType, java.util.Map<String, String> __ctx, Callback_PltMessageService_push __cb);

    /**
     * 推送消息
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_push(String msgType, 
                                      String[] receivers, 
                                      String mode, 
                                      String label, 
                                      String msgContent, 
                                      String cd, 
                                      String sender, 
                                      String chainType, 
                                      IceInternal.Functional_VoidCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 推送消息
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_push(String msgType, 
                                      String[] receivers, 
                                      String mode, 
                                      String label, 
                                      String msgContent, 
                                      String cd, 
                                      String sender, 
                                      String chainType, 
                                      IceInternal.Functional_VoidCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                      IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 推送消息
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_push(String msgType, 
                                      String[] receivers, 
                                      String mode, 
                                      String label, 
                                      String msgContent, 
                                      String cd, 
                                      String sender, 
                                      String chainType, 
                                      java.util.Map<String, String> __ctx, 
                                      IceInternal.Functional_VoidCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 推送消息
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_push(String msgType, 
                                      String[] receivers, 
                                      String mode, 
                                      String label, 
                                      String msgContent, 
                                      String cd, 
                                      String sender, 
                                      String chainType, 
                                      java.util.Map<String, String> __ctx, 
                                      IceInternal.Functional_VoidCallback __responseCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                      IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                      IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 推送消息
     * @param __result The asynchronous result object.
     **/
    public void end_push(Ice.AsyncResult __result)
        throws com.juzix.plt.slice.common.PltException;
}
