// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `plt_user_service.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.juzix.plt.slice.user;

/**
 * 用户服务
 **/
public interface PltUserServicePrx extends Ice.ObjectPrx
{
    /**
     * 登陆(客户端)
     * @param deviceId 设备id
     * @param data 登陆业务数据
     * @return LoginResp 登陆响应信息
     **/
    public PltLoginResp login(String deviceId, String data)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 登陆(客户端)
     * @param deviceId 设备id
     * @param data 登陆业务数据
     * @param __ctx The Context map to send with the invocation.
     * @return LoginResp 登陆响应信息
     **/
    public PltLoginResp login(String deviceId, String data, java.util.Map<String, String> __ctx)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 登陆(客户端)
     * @param deviceId 设备id
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_login(String deviceId, String data);

    /**
     * 登陆(客户端)
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_login(String deviceId, String data, java.util.Map<String, String> __ctx);

    /**
     * 登陆(客户端)
     * @param deviceId 设备id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_login(String deviceId, String data, Ice.Callback __cb);

    /**
     * 登陆(客户端)
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_login(String deviceId, String data, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 登陆(客户端)
     * @param deviceId 设备id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_login(String deviceId, String data, Callback_PltUserService_login __cb);

    /**
     * 登陆(客户端)
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_login(String deviceId, String data, java.util.Map<String, String> __ctx, Callback_PltUserService_login __cb);

    /**
     * 登陆(客户端)
     * @param deviceId 设备id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_login(String deviceId, 
                                       String data, 
                                       IceInternal.Functional_GenericCallback1<PltLoginResp> __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 登陆(客户端)
     * @param deviceId 设备id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_login(String deviceId, 
                                       String data, 
                                       IceInternal.Functional_GenericCallback1<PltLoginResp> __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                       IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 登陆(客户端)
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_login(String deviceId, 
                                       String data, 
                                       java.util.Map<String, String> __ctx, 
                                       IceInternal.Functional_GenericCallback1<PltLoginResp> __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 登陆(客户端)
     * @param deviceId 设备id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_login(String deviceId, 
                                       String data, 
                                       java.util.Map<String, String> __ctx, 
                                       IceInternal.Functional_GenericCallback1<PltLoginResp> __responseCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                       IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                       IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 登陆(客户端)
     * @param __result The asynchronous result object.
     * @return LoginResp 登陆响应信息
     **/
    public PltLoginResp end_login(Ice.AsyncResult __result)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 登出(客户端)
     * @param userId 用户id
     * @param token 登陆返回的token
     **/
    public void logout(String userId, String token)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 登出(客户端)
     * @param userId 用户id
     * @param token 登陆返回的token
     * @param __ctx The Context map to send with the invocation.
     **/
    public void logout(String userId, String token, java.util.Map<String, String> __ctx)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 登出(客户端)
     * @param userId 用户id
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_logout(String userId, String token);

    /**
     * 登出(客户端)
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_logout(String userId, String token, java.util.Map<String, String> __ctx);

    /**
     * 登出(客户端)
     * @param userId 用户id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_logout(String userId, String token, Ice.Callback __cb);

    /**
     * 登出(客户端)
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_logout(String userId, String token, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 登出(客户端)
     * @param userId 用户id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_logout(String userId, String token, Callback_PltUserService_logout __cb);

    /**
     * 登出(客户端)
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_logout(String userId, String token, java.util.Map<String, String> __ctx, Callback_PltUserService_logout __cb);

    /**
     * 登出(客户端)
     * @param userId 用户id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_logout(String userId, 
                                        String token, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 登出(客户端)
     * @param userId 用户id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_logout(String userId, 
                                        String token, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 登出(客户端)
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_logout(String userId, 
                                        String token, 
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 登出(客户端)
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_logout(String userId, 
                                        String token, 
                                        java.util.Map<String, String> __ctx, 
                                        IceInternal.Functional_VoidCallback __responseCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                        IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                        IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 登出(客户端)
     * @param __result The asynchronous result object.
     **/
    public void end_logout(Ice.AsyncResult __result)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 查询用户会话信息
     * @param userId 用户id
     * @return UserInfo
     **/
    public PltUserInfo queryUserInfo(String userId)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 查询用户会话信息
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @return UserInfo
     **/
    public PltUserInfo queryUserInfo(String userId, java.util.Map<String, String> __ctx)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 查询用户会话信息
     * @param userId 用户id
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfo(String userId);

    /**
     * 查询用户会话信息
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfo(String userId, java.util.Map<String, String> __ctx);

    /**
     * 查询用户会话信息
     * @param userId 用户id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfo(String userId, Ice.Callback __cb);

    /**
     * 查询用户会话信息
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfo(String userId, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 查询用户会话信息
     * @param userId 用户id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfo(String userId, Callback_PltUserService_queryUserInfo __cb);

    /**
     * 查询用户会话信息
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfo(String userId, java.util.Map<String, String> __ctx, Callback_PltUserService_queryUserInfo __cb);

    /**
     * 查询用户会话信息
     * @param userId 用户id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfo(String userId, 
                                               IceInternal.Functional_GenericCallback1<PltUserInfo> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 查询用户会话信息
     * @param userId 用户id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfo(String userId, 
                                               IceInternal.Functional_GenericCallback1<PltUserInfo> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 查询用户会话信息
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfo(String userId, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_GenericCallback1<PltUserInfo> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 查询用户会话信息
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfo(String userId, 
                                               java.util.Map<String, String> __ctx, 
                                               IceInternal.Functional_GenericCallback1<PltUserInfo> __responseCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                               IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                               IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 查询用户会话信息
     * @param __result The asynchronous result object.
     * @return UserInfo
     **/
    public PltUserInfo end_queryUserInfo(Ice.AsyncResult __result)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 批量查询用户会话信息
     * @param userIds 用户id列表
     * @return userInfoList 用户会话信息列表
     **/
    public PltUserInfo[] queryUserInfoBatch(String[] userIds)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 批量查询用户会话信息
     * @param userIds 用户id列表
     * @param __ctx The Context map to send with the invocation.
     * @return userInfoList 用户会话信息列表
     **/
    public PltUserInfo[] queryUserInfoBatch(String[] userIds, java.util.Map<String, String> __ctx)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 批量查询用户会话信息
     * @param userIds 用户id列表
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfoBatch(String[] userIds);

    /**
     * 批量查询用户会话信息
     * @param userIds 用户id列表
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfoBatch(String[] userIds, java.util.Map<String, String> __ctx);

    /**
     * 批量查询用户会话信息
     * @param userIds 用户id列表
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfoBatch(String[] userIds, Ice.Callback __cb);

    /**
     * 批量查询用户会话信息
     * @param userIds 用户id列表
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfoBatch(String[] userIds, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 批量查询用户会话信息
     * @param userIds 用户id列表
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfoBatch(String[] userIds, Callback_PltUserService_queryUserInfoBatch __cb);

    /**
     * 批量查询用户会话信息
     * @param userIds 用户id列表
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfoBatch(String[] userIds, java.util.Map<String, String> __ctx, Callback_PltUserService_queryUserInfoBatch __cb);

    /**
     * 批量查询用户会话信息
     * @param userIds 用户id列表
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfoBatch(String[] userIds, 
                                                    IceInternal.Functional_GenericCallback1<PltUserInfo[]> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 批量查询用户会话信息
     * @param userIds 用户id列表
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfoBatch(String[] userIds, 
                                                    IceInternal.Functional_GenericCallback1<PltUserInfo[]> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 批量查询用户会话信息
     * @param userIds 用户id列表
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfoBatch(String[] userIds, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_GenericCallback1<PltUserInfo[]> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 批量查询用户会话信息
     * @param userIds 用户id列表
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_queryUserInfoBatch(String[] userIds, 
                                                    java.util.Map<String, String> __ctx, 
                                                    IceInternal.Functional_GenericCallback1<PltUserInfo[]> __responseCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                    IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                    IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 批量查询用户会话信息
     * @param __result The asynchronous result object.
     * @return userInfoList 用户会话信息列表
     **/
    public PltUserInfo[] end_queryUserInfoBatch(Ice.AsyncResult __result)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 验证token
     * @param userId 用户id
     * @param token 客户端传token
     * @return true|false
     **/
    public boolean validationToken(String userId, String token)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 验证token
     * @param userId 用户id
     * @param token 客户端传token
     * @param __ctx The Context map to send with the invocation.
     * @return true|false
     **/
    public boolean validationToken(String userId, String token, java.util.Map<String, String> __ctx)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 验证token
     * @param userId 用户id
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_validationToken(String userId, String token);

    /**
     * 验证token
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_validationToken(String userId, String token, java.util.Map<String, String> __ctx);

    /**
     * 验证token
     * @param userId 用户id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_validationToken(String userId, String token, Ice.Callback __cb);

    /**
     * 验证token
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_validationToken(String userId, String token, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 验证token
     * @param userId 用户id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_validationToken(String userId, String token, Callback_PltUserService_validationToken __cb);

    /**
     * 验证token
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_validationToken(String userId, String token, java.util.Map<String, String> __ctx, Callback_PltUserService_validationToken __cb);

    /**
     * 验证token
     * @param userId 用户id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_validationToken(String userId, 
                                                 String token, 
                                                 IceInternal.Functional_BoolCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 验证token
     * @param userId 用户id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_validationToken(String userId, 
                                                 String token, 
                                                 IceInternal.Functional_BoolCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 验证token
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_validationToken(String userId, 
                                                 String token, 
                                                 java.util.Map<String, String> __ctx, 
                                                 IceInternal.Functional_BoolCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 验证token
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_validationToken(String userId, 
                                                 String token, 
                                                 java.util.Map<String, String> __ctx, 
                                                 IceInternal.Functional_BoolCallback __responseCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                                 IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                                 IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 验证token
     * @param __result The asynchronous result object.
     * @return true|false
     **/
    public boolean end_validationToken(Ice.AsyncResult __result)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 空闲开始
     * @param userId 用户id
     * @param token 客户端传token
     **/
    public void idleBegin(String userId, String token)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 空闲开始
     * @param userId 用户id
     * @param token 客户端传token
     * @param __ctx The Context map to send with the invocation.
     **/
    public void idleBegin(String userId, String token, java.util.Map<String, String> __ctx)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 空闲开始
     * @param userId 用户id
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleBegin(String userId, String token);

    /**
     * 空闲开始
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleBegin(String userId, String token, java.util.Map<String, String> __ctx);

    /**
     * 空闲开始
     * @param userId 用户id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleBegin(String userId, String token, Ice.Callback __cb);

    /**
     * 空闲开始
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleBegin(String userId, String token, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 空闲开始
     * @param userId 用户id
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleBegin(String userId, String token, Callback_PltUserService_idleBegin __cb);

    /**
     * 空闲开始
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleBegin(String userId, String token, java.util.Map<String, String> __ctx, Callback_PltUserService_idleBegin __cb);

    /**
     * 空闲开始
     * @param userId 用户id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleBegin(String userId, 
                                           String token, 
                                           IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 空闲开始
     * @param userId 用户id
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleBegin(String userId, 
                                           String token, 
                                           IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 空闲开始
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleBegin(String userId, 
                                           String token, 
                                           java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 空闲开始
     * @param userId 用户id
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleBegin(String userId, 
                                           String token, 
                                           java.util.Map<String, String> __ctx, 
                                           IceInternal.Functional_VoidCallback __responseCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                           IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                           IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 空闲开始
     * @param __result The asynchronous result object.
     **/
    public void end_idleBegin(Ice.AsyncResult __result)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 空闲结束
     * @param userId 用户id
     * @param token 客户端传token
     * @param idleSet 客户端闲置时间设置 单位分钟
     **/
    public void idleEnd(String userId, String token, String idleSet)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 空闲结束
     * @param userId 用户id
     * @param token 客户端传token
     * @param idleSet 客户端闲置时间设置 单位分钟
     * @param __ctx The Context map to send with the invocation.
     **/
    public void idleEnd(String userId, String token, String idleSet, java.util.Map<String, String> __ctx)
        throws com.juzix.plt.slice.common.PltException;

    /**
     * 空闲结束
     * @param userId 用户id
     * @param idleSet 客户端闲置时间设置 单位分钟
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleEnd(String userId, String token, String idleSet);

    /**
     * 空闲结束
     * @param userId 用户id
     * @param idleSet 客户端闲置时间设置 单位分钟
     * @param __ctx The Context map to send with the invocation.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleEnd(String userId, String token, String idleSet, java.util.Map<String, String> __ctx);

    /**
     * 空闲结束
     * @param userId 用户id
     * @param idleSet 客户端闲置时间设置 单位分钟
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleEnd(String userId, String token, String idleSet, Ice.Callback __cb);

    /**
     * 空闲结束
     * @param userId 用户id
     * @param idleSet 客户端闲置时间设置 单位分钟
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleEnd(String userId, String token, String idleSet, java.util.Map<String, String> __ctx, Ice.Callback __cb);

    /**
     * 空闲结束
     * @param userId 用户id
     * @param idleSet 客户端闲置时间设置 单位分钟
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleEnd(String userId, String token, String idleSet, Callback_PltUserService_idleEnd __cb);

    /**
     * 空闲结束
     * @param userId 用户id
     * @param idleSet 客户端闲置时间设置 单位分钟
     * @param __ctx The Context map to send with the invocation.
     * @param __cb The asynchronous callback object.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleEnd(String userId, String token, String idleSet, java.util.Map<String, String> __ctx, Callback_PltUserService_idleEnd __cb);

    /**
     * 空闲结束
     * @param userId 用户id
     * @param idleSet 客户端闲置时间设置 单位分钟
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleEnd(String userId, 
                                         String token, 
                                         String idleSet, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 空闲结束
     * @param userId 用户id
     * @param idleSet 客户端闲置时间设置 单位分钟
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleEnd(String userId, 
                                         String token, 
                                         String idleSet, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 空闲结束
     * @param userId 用户id
     * @param idleSet 客户端闲置时间设置 单位分钟
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleEnd(String userId, 
                                         String token, 
                                         String idleSet, 
                                         java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb);

    /**
     * 空闲结束
     * @param userId 用户id
     * @param idleSet 客户端闲置时间设置 单位分钟
     * @param __ctx The Context map to send with the invocation.
     * @param __responseCb The lambda response callback.
     * @param __userExceptionCb The lambda user exception callback.
     * @param __exceptionCb The lambda exception callback.
     * @param __sentCb The lambda sent callback.
     * @return The asynchronous result object.
     **/
    public Ice.AsyncResult begin_idleEnd(String userId, 
                                         String token, 
                                         String idleSet, 
                                         java.util.Map<String, String> __ctx, 
                                         IceInternal.Functional_VoidCallback __responseCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.UserException> __userExceptionCb, 
                                         IceInternal.Functional_GenericCallback1<Ice.Exception> __exceptionCb, 
                                         IceInternal.Functional_BoolCallback __sentCb);

    /**
     * 空闲结束
     * @param __result The asynchronous result object.
     **/
    public void end_idleEnd(Ice.AsyncResult __result)
        throws com.juzix.plt.slice.common.PltException;
}
