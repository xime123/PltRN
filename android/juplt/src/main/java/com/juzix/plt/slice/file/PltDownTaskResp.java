// **********************************************************************
//
// Copyright (c) 2003-2016 ZeroC, Inc. All rights reserved.
//
// This copy of Ice is licensed to you under the terms described in the
// ICE_LICENSE file included in this distribution.
//
// **********************************************************************
//
// Ice version 3.6.3
//
// <auto-generated>
//
// Generated from file `plt_file_service.ice'
//
// Warning: do not edit this file.
//
// </auto-generated>
//

package com.juzix.plt.slice.file;

/**
 * 创建下载任务应答
 **/
public class PltDownTaskResp implements java.lang.Cloneable, java.io.Serializable
{
    /**
     * 文件id
     **/
    public String fileId;

    /**
     * 文件id
     **/
    public String
    getFileId()
    {
        return fileId;
    }

    /**
     * 文件id
     **/
    public void
    setFileId(String _fileId)
    {
        fileId = _fileId;
    }

    /**
     * 文件总字节数
     **/
    public int totalBytes;

    /**
     * 文件总字节数
     **/
    public int
    getTotalBytes()
    {
        return totalBytes;
    }

    /**
     * 文件总字节数
     **/
    public void
    setTotalBytes(int _totalBytes)
    {
        totalBytes = _totalBytes;
    }

    public PltDownTaskResp()
    {
        fileId = "";
    }

    public PltDownTaskResp(String fileId, int totalBytes)
    {
        this.fileId = fileId;
        this.totalBytes = totalBytes;
    }

    public boolean
    equals(java.lang.Object rhs)
    {
        if(this == rhs)
        {
            return true;
        }
        PltDownTaskResp _r = null;
        if(rhs instanceof PltDownTaskResp)
        {
            _r = (PltDownTaskResp)rhs;
        }

        if(_r != null)
        {
            if(fileId != _r.fileId)
            {
                if(fileId == null || _r.fileId == null || !fileId.equals(_r.fileId))
                {
                    return false;
                }
            }
            if(totalBytes != _r.totalBytes)
            {
                return false;
            }

            return true;
        }

        return false;
    }

    public int
    hashCode()
    {
        int __h = 5381;
        __h = IceInternal.HashUtil.hashAdd(__h, "::file::PltDownTaskResp");
        __h = IceInternal.HashUtil.hashAdd(__h, fileId);
        __h = IceInternal.HashUtil.hashAdd(__h, totalBytes);
        return __h;
    }

    public PltDownTaskResp
    clone()
    {
        PltDownTaskResp c = null;
        try
        {
            c = (PltDownTaskResp)super.clone();
        }
        catch(CloneNotSupportedException ex)
        {
            assert false; // impossible
        }
        return c;
    }

    public void
    __write(IceInternal.BasicStream __os)
    {
        __os.writeString(fileId);
        __os.writeInt(totalBytes);
    }

    public void
    __read(IceInternal.BasicStream __is)
    {
        fileId = __is.readString();
        totalBytes = __is.readInt();
    }

    static public void
    __write(IceInternal.BasicStream __os, PltDownTaskResp __v)
    {
        if(__v == null)
        {
            __nullMarshalValue.__write(__os);
        }
        else
        {
            __v.__write(__os);
        }
    }

    static public PltDownTaskResp
    __read(IceInternal.BasicStream __is, PltDownTaskResp __v)
    {
        if(__v == null)
        {
             __v = new PltDownTaskResp();
        }
        __v.__read(__is);
        return __v;
    }
    
    private static final PltDownTaskResp __nullMarshalValue = new PltDownTaskResp();

    public static final long serialVersionUID = 252345374L;
}
